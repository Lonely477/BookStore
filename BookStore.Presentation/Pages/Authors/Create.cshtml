@page
@using BookStore.Domain.Models
@using BookStore.Presentation.Extensions
@model BookStore.Presentation.Pages.Authors.CreateModel
@{
    ViewData["Title"] = "Create Author";
}
@{
    bool isAdmin = User.HasClaim("Role", "Admin");
    if (!isAdmin)
    {
        Response.Redirect("/Error?errorMessage=You are not authorized.");
    }
}

<h1>Create Author</h1>

<form method="post">
    <div class="form-group">
        <label asp-for="Author.FirstName" class="control-label">First name</label>
        <input asp-for="Author.FirstName" class="form-control" />
        <span asp-validation-for="Author.FirstName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Author.LastName" class="control-label">Last name</label>
        <input asp-for="Author.LastName" class="form-control" />
        <span asp-validation-for="Author.LastName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Author.Country" class="control-label"></label>
        <select asp-for="Author.Country" class="form-control">
            @foreach (var country in Enum.GetValues(typeof(Country)).Cast<Country>())
            {
                <option value="@country">@country.GetDescription()</option>
            }
        </select>
        <span asp-validation-for="Author.Country" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
